% 
% Eria Lopez
% Universidad Autonoma de Guadalajara
%
clear all;
close all;

% Construct a multimedia reader object associated with file
vidObj = VideoReader('C:\Users\Carmina\Documents\Master\ProcesamientoDeImagenes\take_2.mov');

% Specify that reading should start at 0.5 seconds from the
% beginning.
%vidObj.CurrentTime = 0.5;

% Create an axes
currAxes = axes;

% Num of max frames to obtain
maxFrames = 8;

vidObj.FrameRate
i = 1
figure(1)
% Read video frames until available
while hasFrame(vidObj) & i<maxFrames
    vidFrame(:,:,:,i) = readFrame(vidObj);
    image(vidFrame(:,:,:,i), 'Parent', currAxes);
    currAxes.Visible = 'on';
    pause(1/vidObj.FrameRate);
    i=i+1
end

%Work with only one frame for practical purposes
% workingFrame = vidFrame(:,:,:,10);

%Color slicing
leftColumnLimit = 610;
rightColumnLimit = 1300;
upperRowLimit = 180;
lowerRowLimit = 1080;
figure('Name','red_slicing');

 
for k=1:(maxFrames-1)
    workingFrame = vidFrame(:,:,:,k);
    for i=upperRowLimit:lowerRowLimit                     %loop in axis X
        for j=leftColumnLimit:rightColumnLimit                %loop in axis Y
            if workingFrame(i,j,1)>190 & workingFrame(i,j,2)<90 & workingFrame(i,j,3)<70    %Red slicing
                white((i-(180-1)),(j-(610-1)))=0;
                green((i-(180-1)),(j-(610-1)))=0;
                blue((i-(180-1)),(j-(610-1)))=0;
                red((i-(180-1)),(j-(610-1)),k)=1;
            else 
                white((i-(180-1)),(j-(610-1)))=0;
                green((i-(180-1)),(j-(610-1)))=0;
                blue((i-(180-1)),(j-(610-1)))=0;
                red((i-(180-1)),(j-(610-1)),k)=0;
           end
        end
    end
    imshow(red(:,:,k),[]);
end

%Filter image to remove everything but the circles
x1_filter = 10;
y1_filter = 719;
x2_filter = 180;
y2_filter = 895;
slopeFilter = (y2_filter-y1_filter)/(x2_filter-x1_filter);
x_filter = x1_filter:1:x2_filter;
for indexRowFilter=1:size(red,1)   %create an image with a triangle
    for indexColumnFilter=1:size(red,2)
        y_filter = slopeFilter * (indexColumnFilter-x1_filter) + y1_filter;
        if(indexRowFilter<y_filter)
            imageFilter(indexRowFilter,indexColumnFilter) = 1;
        else
            imageFilter(indexRowFilter,indexColumnFilter) = 0;
        end
    end
end
figure('Name','filter');
imshow(imageFilter);
figure('Name','apply_filter');
for n=1:(maxFrames-1)
    red_filtered(:,:,n) = and(imageFilter,red(:,:,n));
    imshow(red_filtered(:,:,n),[]);
    pause(1/vidObj.FrameRate);
end

%Dilation
figure('Name','dilation');
dilIterations = 7;
structuringElement = [0 1 1 0; 1 1 1 1; 0 1 1 0];
for m=1:(maxFrames-1)
    dilatedArray(:,:,m) = imdilate(red_filtered(:,:,m),structuringElement);
    for dilIndex=1:dilIterations
        dilatedArray(:,:,m) = imdilate(dilatedArray(:,:,m),structuringElement);
    end
    imshow(dilatedArray(:,:,m),[]);
    pause(1/vidObj.FrameRate);
end

figure('Name','centroids');

for index=1:(maxFrames-1) 
    %Find centroids    
    Ilabel = bwlabel(dilatedArray(:,:,index));
    centroids = regionprops(Ilabel, 'centroid');
    imshow(dilatedArray(:,:,index)); hold on;
    for x=1:numel(centroids)
        plot(centroids(x).Centroid(1),centroids(x).Centroid(2),'ro');
    end
    
    centroidsArranged(1) = centroids(1);
    % limits for knee centroid = 96 < y < 430
    if(centroids(2).Centroid(2)>96 & centroids(2).Centroid(2)<430) %y limits for knee centroid
        centroidsArranged(4) = centroids(2);
        centroids(2).Centroid(1) = 0;
        centroids(2).Centroid(2) = 0;
    elseif(centroids(3).Centroid(2)>96 & centroids(3).Centroid(2)<430)
        centroidsArranged(4) = centroids(3);
        centroids(3).Centroid(1) = 0;
        centroids(3).Centroid(2) = 0;
    elseif(centroids(4).Centroid(2)>96 & centroids(4).Centroid(2)<430)
        centroidsArranged(4) = centroids(4);
        centroids(4).Centroid(1) = 0;
        centroids(4).Centroid(2) = 0;
    end
    % limits for ancle centroid =  y>445 x<355
    % at this point, the first centroid is already used, and either one of
    % the rest 2, 3 or 4 is 0
    if(centroids(2).Centroid(1)==0)   %if centroid 2 was cleared, centroids 3 and 4 are left
        if(centroids(3).Centroid(1)<centroids(4).Centroid(1)) %ancle is always behind the tip in x
            centroidsArranged(2) = centroids(3);    %ancle
            centroidsArranged(3) = centroids(4);    %tip
        else
            centroidsArranged(2) = centroids(4);
            centroidsArranged(3) = centroids(3);
        end
    elseif(centroids(3).Centroid(1)==0)
        if(centroids(2).Centroid(1)<centroids(4).Centroid(1))
            centroidsArranged(2) = centroids(2);
            centroidsArranged(3) = centroids(4);
        else
            centroidsArranged(2) = centroids(4);
            centroidsArranged(3) = centroids(2);
        end
    elseif(centroids(4).Centroid(1)==0)
        if(centroids(2).Centroid(1)<centroids(3).Centroid(1))
            centroidsArranged(2) = centroids(2);    %ancle
            centroidsArranged(3) = centroids(3);    %tip
        else
            centroidsArranged(2) = centroids(3);
            centroidsArranged(3) = centroids(2);
        end
    end
            
    %Equations
    %Hip-knee
    m_hn = (centroidsArranged(4).Centroid(2)-centroidsArranged(1).Centroid(2))/(centroidsArranged(4).Centroid(1)-centroidsArranged(1).Centroid(1)); %(y2-y2)/(x2-x1)
    x_hn = centroidsArranged(1).Centroid(1):0.2:centroidsArranged(4).Centroid(1);    %vector from left-most point to right-most point
    y_hn = (m_hn * (x_hn-centroidsArranged(1).Centroid(1))) + centroidsArranged(1).Centroid(2);    %y = m(x-x1)+y1
    plot(x_hn,y_hn,'LineWidth',3);
    %Knee-ancle
    m_ka = (centroidsArranged(4).Centroid(2)-centroidsArranged(2).Centroid(2))/(centroidsArranged(4).Centroid(1)-centroidsArranged(2).Centroid(1));
    x_ka = centroidsArranged(2).Centroid(1):0.2:centroidsArranged(4).Centroid(1);
    y_ka = (m_ka * (x_ka-centroidsArranged(2).Centroid(1))) + centroidsArranged(2).Centroid(2);
    plot(x_ka,y_ka,'LineWidth',3);
    %Ancle-tip
    m_at = (centroidsArranged(2).Centroid(2)-centroidsArranged(3).Centroid(2))/(centroidsArranged(2).Centroid(1)-centroidsArranged(3).Centroid(1));
    x_at = centroidsArranged(2).Centroid(1):0.2:centroidsArranged(3).Centroid(1);
    y_at = (m_at * (x_at-centroidsArranged(3).Centroid(1))) + centroidsArranged(3).Centroid(2);
    plot(x_at,y_at,'LineWidth',3);
    pause(1/vidObj.FrameRate);

    %centroidsArranged(1) : hip
    %centroidsArranged(2) : ancle
    %centroidsArranged(3) : tip
    %centroidsArranged(4) : knee
    
    %Angles
    %Knee angle
    v1= [(centroidsArranged(1).Centroid(1)-centroidsArranged(4).Centroid(1)),(centroidsArranged(1).Centroid(2)-centroidsArranged(4).Centroid(2))]
    v2 = [(centroidsArranged(2).Centroid(1)-centroidsArranged(4).Centroid(1)),(centroidsArranged(2).Centroid(2)-centroidsArranged(4).Centroid(2))]
    x = [v1(1), v2(1)]
    y = [v1(2), v2(2)]
    scatter(x,y)
    cosThetaKnee = dot(v1,v2)/(norm(v1)*norm(v2));
    thetaKneeDegrees = acos(cosThetaKnee)*180/pi
    name1 = cellstr(num2str(thetaKneeDegrees))
    text(centroidsArranged(4).Centroid(1),centroidsArranged(4).Centroid(2),name1,'FontSize',14,'Color',[1,.1,.5],'FontWeight','Bold');
    %Ancle angle
    %v2 coordinate for ancle angle is not the same as for knee angle
    v2_ = [(centroidsArranged(4).Centroid(1)-centroidsArranged(2).Centroid(1)),(centroidsArranged(4).Centroid(2)-centroidsArranged(2).Centroid(2))];   
    v3= [(centroidsArranged(3).Centroid(1)-centroidsArranged(2).Centroid(1)),(centroidsArranged(3).Centroid(2)-centroidsArranged(2).Centroid(2))];    
    cosThetaAncle = dot(v2_,v3)/(norm(v2_)*norm(v3))
    thetaAncleDegrees = acos(cosThetaAncle)*180/pi
    name2 = cellstr(num2str(thetaAncleDegrees))
    text(centroidsArranged(2).Centroid(1),centroidsArranged(2).Centroid(2),name2,'FontSize',14,'Color',[1,.9,.5],'FontWeight','Bold');
    pause(2);
end


